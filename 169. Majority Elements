# METHODE 1

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int f1=0,f2=0;
        int t=nums[0];
        int max,i=0;
        for(i=0;i<nums.size();i++)
        {
            if(t==nums[i])
                f1++;
            else
            {
                if(f1>f2)
                   { f2=f1;
                     max=nums[i-1];
                   }
                t=nums[i];
                f1=1;
            }
        }
                 if(f1>f2)
                   { 
                     max=nums[i-1];
                   }
                   return max;
    }
};

# METHODE 2 (Optimized Solution)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        int n=nums.size(),f=0,t=nums[0];
        for(int i=0;i<n;i++)
        {
            if(t==nums[i])
                f++;
            else
            {
                f--;
                if(f==0)
                {
                    t=nums[i];
                    f=1;
                }
            }
        }
        return t;

    }
};
