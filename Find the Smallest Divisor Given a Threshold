class Solution {
public:
    int max_element(vector<int>nums)
    {
        int max=nums[0];
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>max)
                max=nums[i];
        }
        return max;
    }
    int sum(vector<int>nums,int d)
    {
        int s=0;
        for(int i=0;i<nums.size();i++)
        {
            s+=ceil((double(nums[i])/d));
        }
        return s;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int low=1,high=max_element(nums),mid,s,ans;
        while(low<=high)
        {
            mid=(low+high)/2;
            s=sum(nums,mid);
            if(s<=threshold)
            {
                ans=mid;
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return ans;
    }
};
