class Solution {
  public:
    string postToInfix(string exp) {
       
       int n = exp.size();
       
       string t1;
       
       string t2;
       
       string conc;
       
       stack<string>stk;
       
       for (int i=0 ; i<n ; i++)
       {
           if( (exp[i]>='a' && exp[i]<='z') || (exp[i]>='A' && exp[i]<='Z') || (exp[i]>='0' && exp[i]<='9') )
           {
             stk.push(string(1,exp[i]));

           }
           else
           {
               t1=stk.top();
               stk.pop();
               t2=stk.top();
               stk.pop();
               
               conc = '(' + t2 + exp[i] + t1 + ')';
               
               stk.push(conc);
           }
       }
       return stk.top();
       
    }
};
